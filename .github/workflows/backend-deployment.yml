name: Backend Deployment

on:
  push:
    branches: ["main"]
    # paths:
    #   - "apps/api/**"
    #   - "packages/database/**"
    #   - "packages/validation/**"
    #   - "package.json"
    #   - "package-lock.json"

jobs:
  build:
    runs-on: self-hosted
    environment: production

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 9.15.3
          run_install: false

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"

      - run: pnpm install

      - name: Set API env variables
        run: |
          echo "NODE_ENV=production" >> apps/api/.env
          echo "HOST=${{ vars.HOST }}" >> apps/api/.env
          echo "PORT=${{ vars.PORT }}" >> apps/api/.env
          echo "APP_ORIGIN=${{ vars.APP_ORIGIN }}" >> apps/api/.env
          echo "COMMON_RATE_LIMIT_MAX_REQUESTS=${{ vars.COMMON_RATE_LIMIT_MAX_REQUESTS }}" >> apps/api/.env
          echo "COMMON_RATE_LIMIT_WINDOW_MS=${{ vars.COMMON_RATE_LIMIT_WINDOW_MS }}" >> apps/api/.env
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> apps/api/.env
          echo "DIRECT_URL=${{ secrets.DIRECT_URL }}" >> apps/api/.env
          echo "BKASH_USERNAME=${{ secrets.BKASH_USERNAME }}" >> apps/api/.env
          echo "BKASH_PASSWORD=${{ secrets.BKASH_PASSWORD }}" >> apps/api/.env
          echo "BKASH_APP_KEY=${{ secrets.BKASH_APP_KEY }}" >> apps/api/.env
          echo "BKASH_APP_SECRET=${{ secrets.BKASH_APP_SECRET }}" >> apps/api/.env
          echo "BKASH_GRANT_TOKEN_URL=${{ secrets.BKASH_GRANT_TOKEN_URL }}" >> apps/api/.env
          echo "BKASH_REFRESH_TOKEN_URL=${{ secrets.BKASH_REFRESH_TOKEN_URL }}" >> apps/api/.env
          echo "BKASH_CREATE_PAYMENT_URL=${{ secrets.BKASH_CREATE_PAYMENT_URL }}" >> apps/api/.env
          echo "BKASH_EXECUTE_PAYMENT_URL=${{ secrets.BKASH_EXECUTE_PAYMENT_URL }}" >> apps/api/.env
          echo "BKASH_CALLBACK_URL=${{ secrets.BKASH_CALLBACK_URL }}" >> apps/api/.env
          echo "PAYMENT_SUCCESS_URL=${{ secrets.PAYMENT_SUCCESS_URL }}" >> apps/api/.env
          echo "PAYMENT_FAIL_URL=${{ secrets.PAYMENT_FAIL_URL }}" >> apps/api/.env

      - name: Set package/database env variables
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> packages/database/.env
          echo "DIRECT_URL=${{ secrets.DIRECT_URL }}" >> packages/database/.env

      - name: Database Migration
        run: pnpm run db:migrate:deploy

      - name: Api Build
        run: pnpm --filter api build

      - name: Setup PM2
        run: |
          pnpm add -g pm2
          pm2 --version

      - name: Run api with pm2
        run: |
          cd apps/api
          pm2 describe "signalicon-api" > /dev/null
          if [ $? -eq 0 ]; then
            pm2 restart "signalicon-api"
          else
            pm2 start pnpm --name "signalicon-api" -- start
          fi
